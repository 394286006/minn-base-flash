<?xml version="1.0" encoding="utf-8"?>
<mx:Module xmlns:fx="http://ns.adobe.com/mxml/2009"
		   xmlns:s="library://ns.adobe.com/flex/spark"
		   xmlns:mx="library://ns.adobe.com/flex/mx"
		   xmlns:common="p.minn.common.*"
		   xmlns:dictionary="p.minn.privilege.dictionary.*"
		   width="100%" height="100%" creationComplete="creationCompleteHandler(event)"
		   name="{ resourceManager.getString('resources','dictionary_mng_title')}"
		   layout="absolute" xmlns:globalization="p.minn.privilege.globalization.*"
		   >
	<fx:Script>
		<![CDATA[
			/**
			 * @author minn
			 * @QQ     394286006
			 */ 
			import mx.collections.ArrayCollection;
			import mx.core.FlexGlobals;
			import mx.events.FlexEvent;
			import mx.events.ListEvent;
			import mx.events.MoveEvent;
			import mx.managers.PopUpManager;
			import mx.rpc.http.HTTPService;
			
			import p.minn.common.Entrypt;
			import p.minn.config.BaseConfig;
			import p.minn.event.PageEvent;
			import p.minn.message.Message;
			import p.minn.util.MinnUtil;
			
			import spark.components.TitleWindow;
			private var url:String=null;
			private var win:TitleWindow=null;
			[Bindable]
			public var results:ArrayCollection=new ArrayCollection();
			[Bindable]
			public var dicTypes:ArrayCollection=new ArrayCollection([{"name":"","mkey":BaseConfig.UNKNOWN}]);
			
			protected function creationCompleteHandler(event:FlexEvent):void
			{
				// TODO Auto-generated method stub
				pageBar.addEventListener(PageEvent.PAGE_CHANGE,refresh);
				initDicType();
			}
			
			public function initDicType(evt:Event=null):void{
				var messageBody:Object=new Object();
				var param:Message=new Message(MinnUtil.getEncodeMessage(messageBody));
				param.setSecurityInfo(this.parentApplication.PRIVATEKEY,Math.random(),MinnUtil.getTimeStamp());
				var dictypeService:HTTPService=new HTTPService();
				MinnUtil.send(dictypeService,"/dic?method=getDicType",invoke,param);
			}
			
			private function invoke(rs:Message):void{
				if(rs.sucess){
					dicTypes.addAll(new ArrayCollection(rs.messageBody));
				}else{
					this.parentApplication.msgAlert(rs.messageBody);
				}
				
			}
			
			protected function open_add_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				pannel_id.visible=true; 
			}

			public function del_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				this.parentApplication.checkAlert(resourceManager.getString('resources','common_delete_alert'),executeDel);
			}
			
			private function executeDel():void{
				var messageBody:Object=new Object();
				messageBody.id=datagrid_id.selectedItem.id;
				var param:Message=new Message(MinnUtil.getEncodeMessage(messageBody));
				param.setSecurityInfo(this.parentApplication.PRIVATEKEY,Math.random(),MinnUtil.getTimeStamp());
				var dictypeService:HTTPService=new HTTPService();
				MinnUtil.send(dictypeService,"/dic?method=del",invokeDel,param);
			}

			private function invokeDel(rs:Message):void{
				if(rs.sucess){
					refresh(null);
				}else{
					this.parentApplication.msgAlert(rs.messageBody);
				}
			}
			
			public function refresh(e:Event=null):void{
				var messageBody:Object=new Object();
				messageBody.page=pageBar.pageIndex
				messageBody.rp=pageBar.pageSize;
				messageBody.qtype="pkey";
				messageBody.query=dic_id.selectedItem.mkey;
				var param:Message=new Message(MinnUtil.getEncodeMessage(messageBody));
				param.setSecurityInfo(this.parentApplication.PRIVATEKEY,Math.random(),MinnUtil.getTimeStamp());
				var dictypeService:HTTPService=new HTTPService();
				MinnUtil.send(dictypeService,"/dic?method=query",invokeQuery,param);
			}
			
			public function invokeQuery(message:Message):void{
				pageBar.recordCount=message.messageBody.total;
				results.source=message.messageBody.result;
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<mx:states>
		<s:State name="default"/>    
		<s:State name="qry"/>
	</mx:states>
	
	
	<mx:VBox width="100%" height="100%" verticalGap="0">
		<mx:HBox width="100%"> 
			<mx:Spacer width="100%"/>
			<s:ToggleButton label="{ resourceManager.getString('resources','common_hide_search_condition')}" click="currentState='qry'" click.qry="currentState=''" label.qry="{ resourceManager.getString('resources','common_show_search_condition')}" />
			<s:ToggleButton label="{ resourceManager.getString('resources','common_add')}" click="pannel_id.showValue(null)"/>
			<mx:Spacer width="395"/>
		</mx:HBox>
		<mx:HBox width="100%" includeIn="default"  >
			<s:Spacer width="25"/>
			<mx:Label text="{ resourceManager.getString('resources','dictionary_type')}" />
			<mx:HBox horizontalGap="0">
				<mx:ComboBox id="dic_id" width="150" dataProvider="{dicTypes}" labelField="name"/>
				<mx:Button label="{ resourceManager.getString('resources','common_refresh')}" click="initDicType(event)"/>
			</mx:HBox>
			<mx:Button label="{ resourceManager.getString('resources','common_search')}" click="refresh(event)"/>
		</mx:HBox>
		<mx:HBox width="100%" height="100%">
			<mx:DataGrid id="datagrid_id" width="100%" height="100%" dataProvider="{results}" fontSize="15" textAlign="center" itemDoubleClick="language_id.getDicLang(datagrid_id.selectedItem.id,'dictionary')" >
				<mx:columns>
					<mx:DataGridColumn headerText="{ resourceManager.getString('resources','common_name')}" dataField="name" />
					<mx:DataGridColumn headerText="{ resourceManager.getString('resources','dictionary_field_key')}" dataField="pkey" />
					<mx:DataGridColumn headerText="{ resourceManager.getString('resources','dictionary_field_keyval')}" dataField="value" />
					<mx:DataGridColumn headerText="{ resourceManager.getString('resources','common_createname')}" dataField="createname"/>
					<mx:DataGridColumn headerText="{ resourceManager.getString('resources','common_createtime')}" dataField="createtime" />
					<mx:DataGridColumn headerText="{ resourceManager.getString('resources','common_action')}" width="90"  editable="false" sortable="false">
						<mx:itemRenderer>
							<fx:Component>
								<mx:Button label="{ resourceManager.getString('resources','common_modify')}" click="parentDocument.pannel_id.showValue(data)"/>
							</fx:Component>
						</mx:itemRenderer>
					</mx:DataGridColumn>
					<mx:DataGridColumn headerText="{ resourceManager.getString('resources','common_action')}" width="90"  editable="false" sortable="false">
						<mx:itemRenderer>
							<fx:Component>
								<mx:Button label="{ resourceManager.getString('resources','common_delete')}" click="parentDocument.del_clickHandler(event)">
								</mx:Button>
							</fx:Component>
						</mx:itemRenderer>
					</mx:DataGridColumn>
				</mx:columns>
			</mx:DataGrid>
			<globalization:GlobalizationSetting id="language_id"  height="100%">
			</globalization:GlobalizationSetting>
		</mx:HBox>
		
		<mx:HBox width="100%"
				><mx:Spacer width="100%"/>
			<common:PageToolBar id="pageBar">
			</common:PageToolBar>
			<mx:Spacer width="392"/>
		</mx:HBox>
	</mx:VBox>
	<dictionary:DicPanel id="pannel_id" visible="false" x="400" y="91" 
						 x.qry="0" y.qry="182">
	</dictionary:DicPanel>
	
</mx:Module>
