<?xml version="1.0" encoding="utf-8"?>
<mx:Module xmlns:fx="http://ns.adobe.com/mxml/2009"
		   xmlns:s="library://ns.adobe.com/flex/spark"
		   xmlns:mx="library://ns.adobe.com/flex/mx"
		   xmlns:common="p.minn.common.*"
		   xmlns:account="p.minn.privilege.account.*" 
		   width="100%" height="100%" creationComplete="creationCompleteHandler(event)"
		   layout="absolute" name="{resourceManager.getString('resources','log_title')}" xmlns:globalization="p.minn.privilege.globalization.*">
	<fx:Script>
		<![CDATA[
			/**
			 * @author minn
			 * @QQ     394286006
			 */ 
			import com.adobe.serialization.json.JSON;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Tree;
			import mx.core.FlexGlobals;
			import mx.events.FlexEvent;
			import mx.events.ListEvent;
			import mx.events.MenuEvent;
			import mx.rpc.http.HTTPService;
			
			import p.minn.common.Entrypt;
			import p.minn.config.BaseConfig;
			import p.minn.event.PageEvent;
			import p.minn.message.Message;
			import p.minn.util.MinnUtil;
			
			
			[Bindable]
			private var results:ArrayCollection=new ArrayCollection();
			[Bindable]
			private var detailresults:ArrayCollection=new ArrayCollection();
			[Bindable]
			private var menus:ArrayCollection=new ArrayCollection([{"text":"","id":BaseConfig.UNKNOWN}]);
			[Bindable]
			private var methods:ArrayCollection=new ArrayCollection([{"text":"","id":BaseConfig.UNKNOWN}]);
			[Bindable]
			private var _treeMenuData:ArrayCollection =new ArrayCollection();
			
			protected function creationCompleteHandler(event:Event):void
			{
				// TODO Auto-generated method stub
				pageBar.addEventListener(PageEvent.PAGE_CHANGE,refresh);
				
				var messageBody:Object=new Object();
				var param:Message=new Message(MinnUtil.getEncodeMessage(messageBody));
				param.setSecurityInfo(this.parentApplication.PRIVATEKEY,Math.random(),MinnUtil.getTimeStamp());
				var dictypeService:HTTPService=new HTTPService();
				MinnUtil.send(dictypeService,"/log?method=getSignature",invokeDic,param);
			}
			
			private function invokeDic(rs:Message):void{
				if(rs.sucess){
					menus.addAll(new ArrayCollection(rs.messageBody.RESOURCE));
					methods.addAll(new ArrayCollection(rs.messageBody.SIGNATURE));
				}else{
					this.parentApplication.msgAlert(rs.messageBody);
				}
			}
			
			
			
			public function del_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				this.parentApplication.checkAlert(resourceManager.getString('resources','common_delete_alert'),executeDel);
			}
			
			private function executeDel():void{
				var messageBody:Object=new Object();
				messageBody.id=datagrid_id.selectedItem.id;
				var param:Message=new Message(MinnUtil.getEncodeMessage(messageBody));
				param.setSecurityInfo(this.parentApplication.PRIVATEKEY,Math.random(),MinnUtil.getTimeStamp());
				var dictypeService:HTTPService=new HTTPService();
				MinnUtil.send(dictypeService,"/log?method=del",invokeDel,param);
			}
			
			private function invokeDel(rs:Message):void{
				if(rs.sucess){
					detailresults.removeAll();
					refresh(null);
				}else{
					this.parentApplication.msgAlert(rs.messageBody);
				}
			}
			
			public function refresh(e:Event=null):void{
				
				var messageBody:Object=new Object();
				messageBody.page=pageBar.pageIndex
				messageBody.rp=pageBar.pageSize;
				var query:String=BaseConfig.UNKNOWN;
				if(name_id.text==''){
					query=BaseConfig.UNKNOWN;
				}else{
					query=name_id.text;
				}
				query+=",";
				if(key_id.text==''){
					query+=BaseConfig.UNKNOWN;
				}else{
					query+=key_id.text;
				}
				query+=",";
				if(menu_id.selectedItem){
					query+=menu_id.selectedItem.id;
				}else{
					query+=BaseConfig.UNKNOWN;
				}
				query+=",";
				if(method_id.selectedItem){
					query+=method_id.selectedItem.id;
				}else{
					query+=BaseConfig.UNKNOWN;
				}

				messageBody.qtype="operatorname,changeid,resname,signature";
				messageBody.query=query;
				var param:Message=new Message(MinnUtil.getEncodeMessage(messageBody));
				param.setSecurityInfo(this.parentApplication.PRIVATEKEY,Math.random(),MinnUtil.getTimeStamp());
				var dictypeService:HTTPService=new HTTPService();
				MinnUtil.send(dictypeService,"/log?method=query",invokeQuery,param);
			}
			
			public function invokeQuery(rs:Message):void{
				if(rs.sucess){
					pageBar.recordCount=rs.messageBody.total;
					results.source=rs.messageBody.result;
				}else{
					this.parentApplication.msgAlert(rs.messageBody);
				}
			}
		
	
			
			protected function datagrid_id_itemDoubleClickHandler(event:ListEvent):void
			{
				// TODO Auto-generated method stub
				var messageBody:Object=new Object();
				messageBody.id=datagrid_id.selectedItem.id;
				var param:Message=new Message(MinnUtil.getEncodeMessage(messageBody));
				param.setSecurityInfo(this.parentApplication.PRIVATEKEY,Math.random(),MinnUtil.getTimeStamp());
				var dictypeService:HTTPService=new HTTPService();
				MinnUtil.send(dictypeService,"/log?method=getLogDetail",invokeLogDetailQuery,param);
			}
			
			public function invokeLogDetailQuery(rs:Message):void{
				if(rs.sucess){
					detailresults.source=rs.messageBody;
				}else{
					this.parentApplication.msgAlert(rs.messageBody);
				}
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
		
	</fx:Declarations>
	
	<mx:states>
		<s:State name="default"/>    
		<s:State name="qry"/>
	</mx:states>

	<mx:HBox width="100%" height="100%">
	
	<mx:VBox width="100%" height="100%" verticalGap="0"
			 x.default="208" y.default="0">
	<mx:HBox width="100%">
		<mx:Spacer width="100%"/>
		<s:ToggleButton label="{resourceManager.getString('resources','common_hide_search')}" click="currentState='qry'" click.qry="currentState=''" label.qry="{resourceManager.getString('resources','common_show_search')}" />
		<mx:Spacer width="5"/>
	</mx:HBox>
	<mx:HBox width="100%" includeIn="default">
		<mx:Label text="{resourceManager.getString('resources','log_operator_name')}:"/>
		<mx:TextInput id="name_id"/>
		<mx:Label text="{resourceManager.getString('resources','log_key_val')}:"/>
		<mx:TextInput id="key_id"/>
		<mx:Label text="{resourceManager.getString('resources','log_resname')}:"/>
		<mx:ComboBox id="menu_id" labelField="text" dataProvider="{menus}" x="142" width="129"/>
		<mx:Label text="{resourceManager.getString('resources','log_method')}:"/>
		<mx:ComboBox id="method_id" labelField="text" dataProvider="{methods}" x="142" width="129"/>
		<s:Button label="{resourceManager.getString('resources','common_search')}" click="refresh(event)"/>
	</mx:HBox>
	
	<mx:DataGrid  width="100%" height="100%" dataProvider="{results}" id="datagrid_id" fontSize="15"  textAlign="center" itemDoubleClick="datagrid_id_itemDoubleClickHandler(event)">
		<mx:columns>
			<mx:DataGridColumn headerText="{resourceManager.getString('resources','log_operator_name')}"  dataField="operatorname" />
			<mx:DataGridColumn headerText="{resourceManager.getString('resources','log_resname')}"  dataField="resname" />
			<mx:DataGridColumn headerText="{resourceManager.getString('resources','log_account_ip')}"  dataField="account_ip" />
			<mx:DataGridColumn headerText="{resourceManager.getString('resources','log_operator_date')}"  dataField="operator_date" />
			<mx:DataGridColumn headerText="{resourceManager.getString('resources','log_operator_signature')}" dataField="signature_name" />
			<mx:DataGridColumn headerText="{ resourceManager.getString('resources','common_action')}" width="90"  editable="false" sortable="false">
				<mx:itemRenderer>
					<fx:Component>
						<mx:Button label="{ resourceManager.getString('resources','common_delete')}" click="parentDocument.del_clickHandler(event)">
						</mx:Button>
					</fx:Component>
				</mx:itemRenderer>
			</mx:DataGridColumn>
		</mx:columns>
	</mx:DataGrid>
		<mx:HBox width="100%">
			<mx:Spacer width="100%"/>
			<common:PageToolBar id="pageBar">
			</common:PageToolBar><mx:Spacer width="5"/>
		</mx:HBox>
	</mx:VBox>
		<s:Panel title="{ resourceManager.getString('resources','log_change_property')}" width="350" height="100%" >
			<mx:DataGrid   width="100%" height="100%"  id="detail_id" dataProvider="{detailresults}" fontSize="15" textAlign="center" >
			<mx:columns>
				<mx:DataGridColumn headerText="{ resourceManager.getString('resources','log_change_name')}"  dataField="k_name" />
				<mx:DataGridColumn headerText="{ resourceManager.getString('resources','log_change_val')}"  dataField="val" />
			</mx:columns>
			</mx:DataGrid>
		</s:Panel>
		<s:Spacer/>
	</mx:HBox>
</mx:Module>
