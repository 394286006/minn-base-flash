<?xml version="1.0" encoding="utf-8"?>
<s:TitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009" 
		   xmlns:s="library://ns.adobe.com/flex/spark" 
		   xmlns:mx="library://ns.adobe.com/flex/mx"
		   title="{ resourceManager.getString('resources','menu_maintain')}" 
		   width="600" height="252"  
		    close="this.visible=false" >
	<s:layout>
		<s:VerticalLayout/>
	</s:layout>
	<fx:Script>
		<![CDATA[
			/**
			 * @author minn
			 * @QQ     394286006
			 */ 
			import mx.collections.ArrayCollection;
			import mx.events.ListEvent;
			import mx.events.ValidationResultEvent;
			import mx.rpc.http.HTTPService;
			import mx.validators.Validator;
			
			import p.minn.message.Message;
			import p.minn.util.MinnUtil;
			[Bindable]
			private var _item:Object;
			[Bindable]
			private var keyStatus:Boolean=true;
			private var _pid:String="";
		
			[Bindable]
			private var resources:ArrayCollection=new ArrayCollection();
			[Bindable]
			private var resourceurltypes:ArrayCollection=new ArrayCollection();
			[Bindable]
			private var actives:ArrayCollection=new ArrayCollection();
			[Bindable]
			private var languages:ArrayCollection=new ArrayCollection();
			
			public function initDic(dic:Object):void{
				var langs:Array=dic.LANGUAGE;
				languages.source=langs;
				actives.source=dic.ACTIVETYPE;
				resourceurltypes.source=dic.RESOURCEURLTYPE;
				resources.source=dic.RESOURCETYPE;
				var local:String=String(resourceManager.localeChain[0]).replace("-","_");
				for(var i:int=0;i<langs.length;i++){
					if(local.indexOf(langs[i].id)!=-1){
						language_id.selectedIndex=i;
						break;
					}
				}
			}
			
			public function showValue(item:Object,tree:Object):void{
				_item=item;
				
				keyStatus=(item==null? true:false);
				if(keyStatus){
					if(tree){
						this._pid=tree.id;
						pnode_id.text =tree.text;
					}else{
						this.parentApplication.msgAlert(resourceManager.getString('resources','menu_resource_selected'));
						return;
					}
					
					this.title=resourceManager.getString('resources','menu_add_title');
				}else{
					
					this.title=resourceManager.getString('resources','menu_modify_title');
				}
				this.visible=true;
				for(var i:int=0;i<resources.length;i++){
					if(item.type_v ==resources[i].id){
						resource_id.selectedIndex=i;
						break;
					}
				}
				for( i=0;i<resourceurltypes.length;i++){
					if(item.urltype_v==resourceurltypes[i].id){
						resourceurltype_id.selectedIndex=i;
						break;
					}
				}
				for( i=0;i<actives.length;i++){
					if(item.active_v==actives[i].id){
						language_id.selectedIndex=i;
						break;
					}
				}
				
			}			
			
			
			protected function saveOrModify_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				var validatorErrorArray:Array = Validator.validateAll(validatorArray); 
				if(validatorErrorArray.length >0){
					this.parentApplication.msgAlert(resourceManager.getString('resources','validate_check_msg'));
					return;
				}
				
				var messageBody:Object=new Object();
				if(!keyStatus){
					messageBody.id=_item.id;
				}
				messageBody.name=name_id.text;
				messageBody.language=language_id.selectedItem.id;
				messageBody.url=url_id.text;
				messageBody.type=resource_id.selectedItem.id;
				messageBody.urlType=resourceurltype_id.selectedItem.id;
				messageBody.code=code_id.text;
				messageBody.sort=sort_id.text;
				messageBody.active=active_id.selectedItem.id;
				var url:String="/menu?method=update";
				if(keyStatus){
					url="/menu?method=save";
					messageBody.pId=_pid;
				}else{
					messageBody.gid=_item.gid;
					messageBody.pId=_item.pId;
				}
				var param:Message=new Message(MinnUtil.getEncodeMessage(messageBody));
				param.setSecurityInfo(this.parentApplication.PRIVATEKEY,Math.random(),MinnUtil.getTimeStamp());
				var dictypeService:HTTPService=new HTTPService();
				
				MinnUtil.send(dictypeService,url,invoke,param);
				
			}
			
			private function invoke(rs:Message):void{
				if(rs.sucess){
					this.visible=false;
					this._pid="";
					this.parentDocument.refresh();
				}else{
					this.parentApplication.msgAlert(rs.messageBody);
				}
			}
		

		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
		<fx:Array id="validatorArray">
			<mx:StringValidator 
				source="{name_id}" 
				requiredFieldError="{resourceManager.getString('resources','dictionary_validate_pkey_notnull')}"
				property="text" 
				required="true" />
			<mx:NumberValidator source="{sort_id}" property="text" integerError="{resourceManager.getString('resources','menu_validate_num_int')}" invalidCharError="{resourceManager.getString('resources','menu_validate_num_int')}" invalidFormatCharsError="{resourceManager.getString('resources','menu_validate_num_int')}"
								minValue="0"  domain="int"
								required="true" requiredFieldError="{resourceManager.getString('resources','menu_validate_num_notnull')}"
								/>
			<mx:StringValidator
				source="{code_id}" 
				requiredFieldError="{resourceManager.getString('resources','menu_desc_notnulll')}"
				property="text" 
				required="true" />
			
		</fx:Array>
		
	</fx:Declarations>

	<s:Spacer width="0" height="20"/>
	<s:TileGroup width="100%" height="88" horizontalAlign="center" requestedColumnCount="4"
				 requestedRowCount="6">
		<mx:Label text="{resourceManager.getString('resources','common_name')}"/>
		<mx:TextInput id="name_id" x="136" width="130"  text="{_item.name}"/>
		<mx:Label text="{resourceManager.getString('resources','globalization_field_language')}"/>
		<mx:ComboBox id="language_id" editable="false" enabled="false" dataProvider="{languages}" labelField="text" width="129"/>
		<mx:Label text="{resourceManager.getString('resources','menu_url')}"/>
		<mx:TextInput id="url_id" x="136" width="130" text="{_item.url}"/>
		<mx:Label text="{resourceManager.getString('resources','menu_type')}"/>
		<mx:ComboBox id="resource_id" dataProvider="{resources}" labelField="text" width="129"/>
		<mx:Label text="{resourceManager.getString('resources','menu_pId')}"/>
		<mx:TextInput id="pnode_id" x="135" width="132" editable="false" text="{_item.pNode}"/>
		<mx:Label text="{resourceManager.getString('resources','menu_urltype')}"/>
		<mx:ComboBox id="resourceurltype_id" dataProvider="{resourceurltypes}" labelField="text" width="129"/>
		<mx:Label text="{resourceManager.getString('resources','menu_code')}"/>
		<mx:TextInput id="code_id" x="135" width="132" text="{_item.code}"/>
		<mx:Label text="{resourceManager.getString('resources','common_active')}"/>
		<mx:ComboBox id="active_id" dataProvider="{actives}" labelField="text" width="129"/>
		<mx:Label text="{resourceManager.getString('resources','menu_sort')}"/>
		<mx:TextInput id="sort_id" x="135" width="132" text="{_item.sort}"/>
		<s:Spacer/><s:Spacer/><s:Spacer/>
		
		<s:Button label="{resourceManager.getString('resources','common_ok')}" click="saveOrModify_clickHandler(event)"/>
		<s:Button label="{resourceManager.getString('resources','common_cancel')}" click="this.visible=false;"/>
	</s:TileGroup>
	
</s:TitleWindow>
